# Install Cypress, then run all tests (in parallel)
stages:
  - deploy
  - test

variables:
  VERCEL_TOKEN: $VERCEL_TOKEN
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

# Cache using branch name
# https://gitlab.com/help/ci/caching/index.md
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    #- .yarn-cache/
    - .cache/*
    - cache/Cypress
    - deploy

deploy-to-vercel:
  image: node:16-alpine
  stage: deploy

  script:
    - npm i -g vercel
    - >
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]; then
        vercel -t $VERCEL_TOKEN --confirm --prod > vercel_deployment_url.txt
      else
        vercel -t $VERCEL_TOKEN --confirm > vercel_deployment_url.txt
      fi

  artifacts:
    when: on_success
    paths:
      - vercel_deployment_url.txt

# Cypress Images
# https://github.com/cypress-io/cypress-docker-images/blob/master/browsers/README.md
cypress-test:
  #image: cypress/browsers:node16.5.0-chrome97-ff96
  image: cypress/browsers:node14.17.0-chrome88-ff89
  stage: test

  script:
    - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
    - echo 'yarn-offline-mirror-pruning true' >> .yarnrc
    - yarn install --frozen-lockfile --no-progress
    - DEPLOYMENT_URL=$(cat vercel_deployment_url.txt)
    - yarn cypress run --config baseUrl=$DEPLOYMENT_URL

  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/

  artifacts:
    when: on_success
    paths:
      - cypress/screenshots
      - cypress/videos
    expire_in: 1 day
